plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.2.0'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}

version = mod_version
group = mod_group_id
base {
    archivesName = "${mod_file_name}-${minecraft_version}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    runs {
        configureEach {
            jvmArgs = [
                    "-XX:+IgnoreUnrecognizedVMOptions",
                    "-XX:+AllowEnhancedClassRedefinition"
            ]
            arg "-mixin.config=true_power_of_maid.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.debug.export', 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        client {
            workingDirectory project.file('run/client')
            property 'forge.enabledGameTestNamespaces', mod_id
        }
        server {
            workingDirectory project.file('run/server')
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }
        gameTestServer {
            workingDirectory project.file('run/gametest')
            property 'forge.enabledGameTestNamespaces', mod_id
        }
        data {
            workingDirectory project.file('run/data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
    exclude '.cache/**'
}

repositories {
    // 优先本地 libs 文件夹
    flatDir {
        dir 'libs'
    }
    maven {
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("maven.modrinth:slashblade-resharped:${slash_blade_version}")
    implementation fg.deobf('curse.maven:touhou-little-maid-355044:6613821-sources-6613853')

    implementation fg.deobf("libs:mrqxs_Slashblade_Core-${minecraft_version}:${mrqx_slash_blade_core_version}")
    implementation fg.deobf("libs:True_POWER-${minecraft_version}:${true_power_version}")

    compileOnly fg.deobf("maven.modrinth:simplebedrockmodel:1.2.1-forge,1.20.1")
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version                  : minecraft_version,
            minecraft_version_range            : minecraft_version_range,
            forge_version                      : forge_version,
            forge_version_range                : forge_version_range,
            loader_version_range               : loader_version_range,
            mod_id                             : mod_id,
            mod_name                           : mod_name,
            mod_license                        : mod_license,
            mod_version                        : mod_version,
            mod_authors                        : mod_authors,
            mod_description                    : mod_description,
            mod_file_name                      : mod_file_name,
            slash_blade_version                : slash_blade_version,
            slash_blade_version_range          : slash_blade_version_range,
            mrqx_slash_blade_core_version      : mrqx_slash_blade_core_version,
            mrqx_slash_blade_core_version_range: mrqx_slash_blade_core_version_range,
            true_power_version                 : true_power_version,
            true_power_version_range           : true_power_version_range,
            maid_version                       : maid_version,
            maid_version_range                 : maid_version_range,
    ]
    inputs.properties replaceProperties
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1',
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    finalizedBy 'reobfJar'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

mixin {
    config 'true_power_of_maid.mixins.json'
    add sourceSets.main, "true_power_of_maid.refmap.json"
    debug.verbose = true
    debug.export = true
}
